{"version":3,"sources":["components/FirstPage.js","components/SecondPage.js","App.js","index.js"],"names":["FirstPage","state","messages","Date","now","textArea","touched","handleChange","e","props","currentPage","setState","target","value","handleSubmit","preventDefault","context","swipeableViews","slideUpdateHeight","className","onSubmit","this","onChange","type","map","el","id","Intl","DateTimeFormat","hour","minute","format","PureComponent","contextTypes","PropTypes","object","isRequired","SecondPage","React","useState","second","currentTime","setCurrentTime","useEffect","updateTime","setTimeout","App","setCurrentPage","onChangeIndex","animateHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIMA,E,4MAEFC,MAAQ,CACJC,SAAU,CACN,CAAC,iEAAgBC,KAAKC,OACtB,CAAC,wYAA8ED,KAAKC,OACpF,CAAC,0MAA2CD,KAAKC,QAErDC,SAAU,GACVC,SAAS,G,EAKbC,aAAe,SAACC,GACR,EAAKC,MAAMC,aACX,EAAKC,UAAS,SAAAV,GAAK,kCACZA,GADY,IAEfI,SAAUG,EAAEI,OAAOC,Y,EAK/BC,aAAe,SAACN,GACZA,EAAEO,iBAC0B,KAAxB,EAAKd,MAAMI,UAAmB,EAAKI,MAAMC,cACzC,EAAKC,UAAS,SAAAV,GAAK,kCACZA,GADY,IAEfC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsB,CAACD,EAAMI,SAAUF,KAAKC,SACpDC,SAAU,QAEd,EAAKW,QAAQC,eAAeC,sB,4CAKpC,WACI,OACI,sBAAKC,UAAU,aAAf,UACI,uBAAMA,UAAU,OAAOC,SAAUC,KAAKP,aAAtC,UACI,gCACI,0BAAUK,UAAU,YACbN,MAAOQ,KAAKpB,MAAMI,SAAUiB,SAAUD,KAAKd,iBAEtD,uBAAOgB,KAAK,SAASJ,UAAU,SAASN,MAAM,YAEjDQ,KAAKpB,MAAMC,SAASsB,KAAI,SAACC,EAAIC,GAAL,OAAY,sBAAKP,UAAU,UAAf,UACjC,mBAAGA,UAAU,OAAb,SAAqBM,EAAG,KACxB,qBAAKN,UAAU,eAAf,SAA+B,IAAIQ,KAAKC,eAAe,QAAS,CAC5DC,KAAM,UAAWC,OAAQ,YAC1BC,OAAON,EAAG,QAJkDC,a,GA9C3DM,iBAyDxBhC,EAAUiC,aAAe,CACrBhB,eAAgBiB,IAAUC,OAAOC,YAItBpC,QCjCAqC,EA9BI,SAAC5B,GAEhB,MAAsC6B,IAAMC,SAAS,IAAIZ,KAAKC,eAAe,QAAS,CAC9EC,KAAM,UAAWC,OAAQ,UAAWU,OAAQ,YAC7CT,OAAO5B,KAAKC,QAFnB,mBAAOqC,EAAP,KAAoBC,EAApB,KAqBA,OAjBAJ,IAAMK,WAAU,WAEZ,IAAMC,EAAa,WACfF,EAAe,IAAIf,KAAKC,eAAe,QAAS,CAC5CC,KAAM,UAAWC,OAAQ,UAAWU,OAAQ,YAC7CT,OAAO5B,KAAKC,SAGdK,EAAMC,cACPkC,IACAC,YAAW,WACPD,MACD,SAMP,qBAAKzB,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,cAAgCsB,EAAhC,UCVGK,MAZf,WACI,MAAsCR,IAAMC,UAAS,GAArD,mBAAO7B,EAAP,KAAoBqC,EAApB,KACF,OACI,qBAAK5B,UAAU,UAAf,SACI,eAAC,IAAD,CAAgB6B,cAAe,kBAAMD,GAAgBrC,IAAcuC,eAAa,EAAhF,UACI,cAAC,EAAD,CAAWvC,YAAaA,IACxB,cAAC,EAAD,CAAYA,YAAaA,UCNvCwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bfa5459e.chunk.js","sourcesContent":["import React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass FirstPage extends PureComponent {\n\n    state = {\n        messages: [\n            ['Добрый день!', Date.now()],\n            ['Это очень длинное предложение, которое могло бы выйти за область видимости', Date.now()],\n            ['А_тут_я_буду_писать_совсем_без_пробелов', Date.now()]\n            ],\n        textArea: '',\n        touched: false,\n    }\n\n\n\n    handleChange = (e) => {\n        if (this.props.currentPage) {\n            this.setState(state => ({\n                ...state,\n                textArea: e.target.value\n            }))\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if (this.state.textArea !== '' && this.props.currentPage) {\n            this.setState(state => ({\n                ...state,\n                messages: [...state.messages, [state.textArea, Date.now()]],\n                textArea: ''\n            }))\n            this.context.swipeableViews.slideUpdateHeight();\n        }\n    }\n\n\n    render() {\n        return (\n            <div className='first-page'>\n                <form className='form' onSubmit={this.handleSubmit}>\n                    <label>\n                        <textarea className='text-area'\n                               value={this.state.textArea} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" className='submit' value=\"Send\" />\n                </form>\n                {this.state.messages.map((el, id) => <div className='message' key={id}>\n                    <p className='text'>{el[0]}</p>\n                    <div className='message-time'>{new Intl.DateTimeFormat('en-GB', {\n                        hour: 'numeric', minute: 'numeric',\n                    }).format(el[1])}</div>\n                </div> )}\n            </div>\n        )\n    }\n}\n\nFirstPage.contextTypes = {\n    swipeableViews: PropTypes.object.isRequired,\n};\n\n\nexport default FirstPage","import React from \"react\";\n\n\nconst SecondPage = (props) => {\n\n    const [currentTime, setCurrentTime] = React.useState(new Intl.DateTimeFormat('en-GB', {\n            hour: 'numeric', minute: 'numeric', second: 'numeric',\n        }).format(Date.now()))\n\n    React.useEffect(() => {\n\n        const updateTime = () => {\n            setCurrentTime(new Intl.DateTimeFormat('en-GB', {\n                hour: 'numeric', minute: 'numeric', second: 'numeric',\n            }).format(Date.now()))\n        }\n\n        if (!props.currentPage) {\n            updateTime()\n            setTimeout(() => {\n                updateTime()\n            }, 1000)\n        }\n\n    })\n\n    return (\n        <div className='second-page'>\n            <div className='current-time'> {currentTime} </div>\n        </div>\n    )\n}\n\nexport default SecondPage","import React from \"react\";\nimport './App.css';\nimport SwipeableViews from \"react-swipeable-views\";\nimport FirstPage from \"./components/FirstPage\";\nimport SecondPage from \"./components/SecondPage\";\n\nfunction App() {\n    const [currentPage, setCurrentPage] = React.useState(true)\n  return (\n      <div className='wrapper'>\n          <SwipeableViews onChangeIndex={() => setCurrentPage(!currentPage)} animateHeight>\n              <FirstPage currentPage={currentPage}/>\n              <SecondPage currentPage={currentPage}/>\n          </SwipeableViews>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}